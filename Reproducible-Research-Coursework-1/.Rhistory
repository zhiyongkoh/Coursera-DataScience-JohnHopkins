nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- merge(avg_steps_perday,as.data.table(aggregate(steps ~ date,na.rm = TRUE, data=activity, FUN=mean)), by="date", all.x = T)
avg_steps_perday[which(is.na(steps)),steps:=0][,steps:=as.integer(steps)]
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
activity$steps[i] = avg_steps_perday[which(date==activity$date[i]),]$steps
print(activity$steps[i])
}
}
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- merge(avg_steps_perday,as.data.table(aggregate(steps ~ date,na.rm = TRUE, data=activity, FUN=mean)), by="date", all.x = T)
avg_steps_perday[which(is.na(steps)),steps:=0][,steps:=as.integer(steps)]
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
activity$steps[i] = avg_steps_perday[which(date==activity$date[i]),]$steps
elif(activity$steps[i]=0,,print(activity$steps[i]))
elif(activity$steps[i]>0,print(activity$steps[i]),)
"elif"
?elif
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- merge(avg_steps_perday,as.data.table(aggregate(steps ~ date,na.rm = TRUE, data=activity, FUN=mean)), by="date", all.x = T)
avg_steps_perday[which(is.na(steps)),steps:=0][,steps:=as.integer(steps)]
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
activity$steps[i] = avg_steps_perday[which(date==activity$date[i]),]$steps
ifelse(activity$steps[i]>0,print(activity$steps[i]),)
}
}
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- merge(avg_steps_perday,as.data.table(aggregate(steps ~ date,na.rm = TRUE, data=activity, FUN=mean)), by="date", all.x = T)
avg_steps_perday[which(is.na(steps)),steps:=0][,steps:=as.integer(steps)]
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
activity$steps[i] = avg_steps_perday[which(date==activity$date[i]),]$steps
ifelse(activity$steps[i]>0,print(activity$steps[i]),"")
}
}
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- merge(avg_steps_perday,as.data.table(aggregate(steps ~ date,na.rm = TRUE, data=activity, FUN=mean)), by="date", all.x = T)
avg_steps_perday[which(is.na(steps)),steps:=0][,steps:=as.integer(steps)]
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
for(j in 1:nrow(avg_steps_perday$date)){
if (avg_steps_perday$date[j] == activity$date[i]){
activity$steps[i] <- avg_steps_perday$steps[j]
ifelse(activity$steps[i]>0,print(activity$steps[i]),"")
}
}
}
}
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- merge(avg_steps_perday,as.data.table(aggregate(steps ~ date,na.rm = TRUE, data=activity, FUN=mean)), by="date", all.x = T)
avg_steps_perday[which(is.na(steps)),steps:=0][,steps:=as.integer(steps)]
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
for(j in 1:nrow(avg_steps_perday)){
if (avg_steps_perday$date[j] == activity$date[i]){
activity$steps[i] <- avg_steps_perday$steps[j]
ifelse(activity$steps[i]>0,print(activity$steps[i]),"")
}
}
}
}
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- merge(avg_steps_perday,as.data.table(aggregate(steps ~ date,na.rm = TRUE, data=activity, FUN=mean)), by="date", all.x = T)
avg_steps_perday[which(is.na(steps)),steps:=0][,steps:=as.integer(steps)]
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
for(j in 1:nrow(avg_steps_perday)){
if (avg_steps_perday$date[j] == activity$date[i]){
activity$steps[i] <- avg_steps_perday$steps[j]
ifelse(activity$steps[i]>0,print(activity$steps[i]),"")
break
}
}
}
}
View(activity)
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- merge(avg_steps_perday,as.data.table(aggregate(steps ~ date,na.rm = TRUE, data=activity, FUN=mean)), by="date", all.x = T)
avg_steps_perday[which(is.na(steps)),steps:=0][,steps:=as.integer(steps)]
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
activity$steps[i] = avg_steps_perday[which(date==activity$date[i]),]$steps
cat(activity$date[i], ": ", activity$steps[i])
}
}
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- merge(avg_steps_perday,as.data.table(aggregate(steps ~ date,na.rm = TRUE, data=activity, FUN=mean)), by="date", all.x = T)
avg_steps_perday[which(is.na(steps)),steps:=0][,steps:=as.integer(steps)]
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
activity$steps[i] = avg_steps_perday[which(date==activity$date[i]),]$steps
cat("\n",activity$date[i], ": ", activity$steps[i])
}
}
## Create the average number of steps per weekday and interval
avgTable <- ddply(activity, .(interval, day), summarize, Avg = mean(steps))
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
library(ddply)
install.packages("ddply")
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
library(plyr)
## Create the average number of steps per weekday and interval
avgTable <- ddply(activity, .(interval, day), summarize, Avg = mean(steps))
View(activity)
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean)
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean)
library(ggplot2)
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
View(avg_steps_perday)
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_perday <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_perday <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
for (i in 1:nrow(activity)){
if(is.na(activity$steps[i]))
{
activity$steps[i] = avg_steps_perday[which(interval==activity$interval[i]),]$steps
cat("\n",activity$interval[i], ": ", activity$steps[i])
}
}
View(avg_steps_perday)
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_interval <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_interval <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
activity_clean <- transform(activity, steps = ifelse(is.na(activity$steps), yes = avg_steps_interval$steps, no = activity$steps))
View(activity_clean)
View(activity)
View(avg_steps_interval)
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_interval <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_interval <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
activity_clean <- transform(activity, steps = ifelse(is.na(activity$steps), yes = avg_steps_interval$steps, no = activity$steps))
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_interval <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_interval <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
activity_clean <- transform(activity, steps = ifelse(is.na(activity$steps), yes = avg_steps_interval$steps, no = activity$steps))
steps_perday_clean <- as.data.table(aggregate(steps ~ date, data=activity_clean, FUN=sum))
hist(steps_perday_clean$steps, col = "blue", xlab = "Steps per day", ylim = c(0,30), main = "Total number of steps per day", breaks = seq(0,25000,by=2500))
steps_perday_clean <- as.data.table(aggregate(steps ~ date, data=activity_clean, FUN=sum))
hist(steps_perday_clean$steps, col = "blue", xlab = "Steps per day", ylim = c(0,30), main = "Total number of steps per day", breaks = seq(0,25000,by=5000))
library(chron)
install.packages("chron")
library(chron)
x <- seq(Sys.Date()-10, Sys.Date(), by = 1)
x[is.weekend(x)]
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_interval <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_interval <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
activity_clean <- transform(activity, steps = ifelse(is.na(activity$steps), yes = avg_steps_interval$steps, no = activity$steps))
steps_perday_clean <- as.data.table(aggregate(steps ~ date, data=activity_clean, FUN=sum))
hist(steps_perday_clean$steps, col = "blue", xlab = "Steps per day", ylim = c(0,30), main = "Total number of steps per day", breaks = seq(0,25000,by=5000))
library(chron)
activity_clean[is.weekend(date),dayofweek:="Weekend"]
activity_clean[!is.weekend(date),dayofweek:="Weekday"]
View(activity_clean)
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_interval <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_interval <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
activity_clean <- transform(activity, steps = ifelse(is.na(activity$steps), yes = avg_steps_interval$steps, no = activity$steps))
steps_perday_clean <- as.data.table(aggregate(steps ~ date, data=activity_clean, FUN=sum))
hist(steps_perday_clean$steps, col = "blue", xlab = "Steps per day", ylim = c(0,30), main = "Total number of steps per day", breaks = seq(0,25000,by=5000))
library(chron)
activity_clean[is.weekend(date),dayofweek:="Weekend"][!is.weekend(date),dayofweek:="Weekday"]
activity_avg_clean <- aggregate(steps~interval + dayofweek, activity_clean, mean, na.rm = TRUE)
plot<- ggplot(activity_avg_clean, aes(x = interval , y = steps, color = datetype)) +
geom_line() +
labs(title = "Average daily steps by type of date", x = "Interval", y = "Average number of steps") +
facet_wrap(~datetype, ncol = 1, nrow=2)
print(plot)
activity_avg_clean <- aggregate(steps~interval + dayofweek, activity_clean, mean, na.rm = TRUE)
plot<- ggplot(activity_avg_clean, aes(x = interval , y = steps, color = dayofweek)) +
geom_line() +
labs(title = "Average daily steps by type of date", x = "Interval", y = "Average number of steps") +
facet_wrap(~dayofweek, ncol = 1, nrow=2)
print(plot)
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_interval <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_interval <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
activity_clean <- transform(activity, steps = ifelse(is.na(activity$steps), yes = avg_steps_interval$steps, no = activity$steps))
steps_perday_clean <- as.data.table(aggregate(steps ~ date, data=activity_clean, FUN=sum))
hist(steps_perday_clean$steps, col = "blue", xlab = "Steps per day", ylim = c(0,30), main = "Total number of steps per day", breaks = seq(0,25000,by=5000))
library(chron)
activity_clean[is.weekend(date),dayofweek:="Weekend"][!is.weekend(date),dayofweek:="Weekday"]
activity_avg_clean <- aggregate(steps~interval + dayofweek, activity_clean, mean, na.rm = TRUE)
plot<- ggplot(activity_avg_clean, aes(x = interval , y = steps, color = dayofweek)) +
geom_line() +
labs(title = "Average Steps taken by Day of Week", x = "Interval", y = "Average No. steps") +
facet_wrap(~dayofweek, ncol = 1, nrow=2)
print(plot)
install.packages("pdflatex")
library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_interval <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_interval <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
activity_clean <- transform(activity, steps = ifelse(is.na(activity$steps), yes = avg_steps_interval$steps, no = activity$steps))
steps_perday_clean <- as.data.table(aggregate(steps ~ date, data=activity_clean, FUN=sum))
hist(steps_perday_clean$steps, col = "blue", xlab = "Steps per day", ylim = c(0,30), main = "Total number of steps per day", breaks = seq(0,25000,by=5000))
library(chron)
activity_clean[is.weekend(date),dayofweek:="Weekend"][!is.weekend(date),dayofweek:="Weekday"]
activity_avg_clean <- aggregate(steps~interval + dayofweek, activity_clean, mean, na.rm = TRUE)
plot<- ggplot(activity_avg_clean, aes(x = interval , y = steps, color = dayofweek)) +
geom_line() +
labs(title = "Average Steps taken by Day of Week", x = "Interval", y = "Average No. steps") +
facet_wrap(~dayofweek, ncol = 1, nrow=2)
print(plot)
