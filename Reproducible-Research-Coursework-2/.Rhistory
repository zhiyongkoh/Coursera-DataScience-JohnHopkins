library(ggplot2)
activity <- read.csv("./activity/activity.csv")
activity$date <- as.POSIXct(activity$date, "Asia/Singapore","%Y-%m-%d")
steps_perday <- aggregate(steps ~ date,data=activity, FUN=sum)
hist(steps_perday$steps, main = "Histogram of Steps Per Day", xlab = "No. of steps", col = "blue")
## Mean of the total number of steps taken per day
mean(steps_perday$steps)
## Median of the total number of steps taken per day
median(steps_perday$steps)
avg_steps_int <- aggregate(steps~interval, activity, mean)
plot(avg_steps_int$interval, avg_steps_int$steps, type = "l", main = "Average steps taken per 5 minutes interval", xlab = "Interval (minutes)", ylab = "No. of Steps")
## Get the max value index and print interval value
cat("Interval ", avg_steps_int$interval[which.max(avg_steps_int$steps)], " with max average of", max(avg_steps_int$steps), " steps")
library(data.table)
activity <- as.data.table(activity)
nrow(activity[which(is.na(activity$steps)),])
avg_steps_interval <- setnames(data.table(unique(activity$date)),c("date"))
avg_steps_interval <- as.data.table(aggregate(steps ~ interval,na.rm = TRUE, data=activity, FUN=mean))
activity_clean <- transform(activity, steps = ifelse(is.na(activity$steps), yes = avg_steps_interval$steps, no = activity$steps))
steps_perday_clean <- as.data.table(aggregate(steps ~ date, data=activity_clean, FUN=sum))
hist(steps_perday_clean$steps, col = "blue", xlab = "Steps per day", ylim = c(0,30), main = "Total number of steps per day", breaks = seq(0,25000,by=5000))
library(chron)
activity_clean[is.weekend(date),dayofweek:="Weekend"][!is.weekend(date),dayofweek:="Weekday"]
activity_avg_clean <- aggregate(steps~interval + dayofweek, activity_clean, mean, na.rm = TRUE)
plot<- ggplot(activity_avg_clean, aes(x = interval , y = steps, color = dayofweek)) +
geom_line() +
labs(title = "Average Steps taken by Day of Week", x = "Interval", y = "Average No. steps") +
facet_wrap(~dayofweek, ncol = 1, nrow=2)
print(plot)
